// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Group Checkbox Error HTML Snapshot 1`] = `
"<fieldset class=\\"slds-form-element\\">
  <legend class=\\"slds-form-element__legend slds-form-element__label\\">Scheduled Day(s)</legend>
  <div class=\\"slds-form-element__control\\">
    <div class=\\"slds-checkbox--button-group\\"><span class=\\"slds-button slds-checkbox--button\\"><input type=\\"checkbox\\" id=\\"ButtonGroupExampleMon\\"/><label class=\\"slds-checkbox--button__label\\" for=\\"ButtonGroupExampleMon\\"><span class=\\"slds-checkbox--faux\\">Mon</span></label>
      </span><span class=\\"slds-button slds-checkbox--button\\"><input type=\\"checkbox\\" id=\\"ButtonGroupExampleTue\\"/><label class=\\"slds-checkbox--button__label\\" for=\\"ButtonGroupExampleTue\\"><span class=\\"slds-checkbox--faux\\">Tue</span></label>
      </span><span class=\\"slds-button slds-checkbox--button\\"><input type=\\"checkbox\\" id=\\"ButtonGroupExampleWed\\"/><label class=\\"slds-checkbox--button__label\\" for=\\"ButtonGroupExampleWed\\"><span class=\\"slds-checkbox--faux\\">Wed</span></label>
      </span><span class=\\"slds-button slds-checkbox--button\\"><input type=\\"checkbox\\" id=\\"ButtonGroupExampleThu\\"/><label class=\\"slds-checkbox--button__label\\" for=\\"ButtonGroupExampleThu\\"><span class=\\"slds-checkbox--faux\\">Thu</span></label>
      </span><span class=\\"slds-button slds-checkbox--button\\"><input type=\\"checkbox\\" id=\\"ButtonGroupExampleFri\\"/><label class=\\"slds-checkbox--button__label\\" for=\\"ButtonGroupExampleFri\\"><span class=\\"slds-checkbox--faux\\">Fri</span></label>
      </span>
    </div>
  </div>
</fieldset>"
`;

exports[`Button Group Checkbox Error HTML Snapshot 2`] = `
"<fieldset class=\\"slds-form-element slds-has-error\\">
  <legend class=\\"slds-form-element__legend slds-form-element__label\\">Scheduled Day(s)</legend>
  <div class=\\"slds-form-element__control\\">
    <div class=\\"slds-checkbox--button-group\\"><span class=\\"slds-button slds-checkbox--button\\"><input type=\\"checkbox\\" id=\\"ButtonGroupExampleMon\\"/><label class=\\"slds-checkbox--button__label\\" for=\\"ButtonGroupExampleMon\\"><span class=\\"slds-checkbox--faux\\">Mon</span></label>
      </span><span class=\\"slds-button slds-checkbox--button\\"><input type=\\"checkbox\\" id=\\"ButtonGroupExampleTue\\"/><label class=\\"slds-checkbox--button__label\\" for=\\"ButtonGroupExampleTue\\"><span class=\\"slds-checkbox--faux\\">Tue</span></label>
      </span><span class=\\"slds-button slds-checkbox--button\\"><input type=\\"checkbox\\" id=\\"ButtonGroupExampleWed\\"/><label class=\\"slds-checkbox--button__label\\" for=\\"ButtonGroupExampleWed\\"><span class=\\"slds-checkbox--faux\\">Wed</span></label>
      </span><span class=\\"slds-button slds-checkbox--button\\"><input type=\\"checkbox\\" id=\\"ButtonGroupExampleThu\\"/><label class=\\"slds-checkbox--button__label\\" for=\\"ButtonGroupExampleThu\\"><span class=\\"slds-checkbox--faux\\">Thu</span></label>
      </span><span class=\\"slds-button slds-checkbox--button\\"><input type=\\"checkbox\\" id=\\"ButtonGroupExampleFri\\"/><label class=\\"slds-checkbox--button__label\\" for=\\"ButtonGroupExampleFri\\"><span class=\\"slds-checkbox--faux\\">Fri</span></label>
      </span>
    </div>
    <div class=\\"slds-form-element__help\\">This field is required</div>
  </div>
</fieldset>"
`;

exports[`Button Group Checkbox Error Snapshot 1`] = `
<ButtonGroupExample>
  <SLDSButtonGroup
    labels={
      Object {
        "error": "This field is required",
        "label": "Scheduled Day(s)",
      }
    }
    variant="checkbox"
  >
    <fieldset
      className="slds-form-element slds-has-error"
    >
      <legend
        className="slds-form-element__legend slds-form-element__label"
      >
        Scheduled Day(s)
      </legend>
      <div
        className="slds-form-element__control"
      >
        <div
          className="slds-checkbox--button-group"
        >
          <SLDSCheckbox
            id="ButtonGroupExampleMon"
            label="Mon"
            labelToggleDisabled="Disabled"
            labelToggleEnabled="Enabled"
            variant="button-group"
          >
            <span
              className="slds-button slds-checkbox--button"
            >
              <input
                id="ButtonGroupExampleMon"
                onChange={[Function]}
                type="checkbox"
              />
              <label
                className="slds-checkbox--button__label"
                htmlFor="ButtonGroupExampleMon"
              >
                <span
                  className="slds-checkbox--faux"
                >
                  Mon
                </span>
              </label>
            </span>
          </SLDSCheckbox>
          <SLDSCheckbox
            id="ButtonGroupExampleTue"
            label="Tue"
            labelToggleDisabled="Disabled"
            labelToggleEnabled="Enabled"
            variant="button-group"
          >
            <span
              className="slds-button slds-checkbox--button"
            >
              <input
                id="ButtonGroupExampleTue"
                onChange={[Function]}
                type="checkbox"
              />
              <label
                className="slds-checkbox--button__label"
                htmlFor="ButtonGroupExampleTue"
              >
                <span
                  className="slds-checkbox--faux"
                >
                  Tue
                </span>
              </label>
            </span>
          </SLDSCheckbox>
          <SLDSCheckbox
            id="ButtonGroupExampleWed"
            label="Wed"
            labelToggleDisabled="Disabled"
            labelToggleEnabled="Enabled"
            variant="button-group"
          >
            <span
              className="slds-button slds-checkbox--button"
            >
              <input
                id="ButtonGroupExampleWed"
                onChange={[Function]}
                type="checkbox"
              />
              <label
                className="slds-checkbox--button__label"
                htmlFor="ButtonGroupExampleWed"
              >
                <span
                  className="slds-checkbox--faux"
                >
                  Wed
                </span>
              </label>
            </span>
          </SLDSCheckbox>
          <SLDSCheckbox
            id="ButtonGroupExampleThu"
            label="Thu"
            labelToggleDisabled="Disabled"
            labelToggleEnabled="Enabled"
            variant="button-group"
          >
            <span
              className="slds-button slds-checkbox--button"
            >
              <input
                id="ButtonGroupExampleThu"
                onChange={[Function]}
                type="checkbox"
              />
              <label
                className="slds-checkbox--button__label"
                htmlFor="ButtonGroupExampleThu"
              >
                <span
                  className="slds-checkbox--faux"
                >
                  Thu
                </span>
              </label>
            </span>
          </SLDSCheckbox>
          <SLDSCheckbox
            id="ButtonGroupExampleFri"
            label="Fri"
            labelToggleDisabled="Disabled"
            labelToggleEnabled="Enabled"
            variant="button-group"
          >
            <span
              className="slds-button slds-checkbox--button"
            >
              <input
                id="ButtonGroupExampleFri"
                onChange={[Function]}
                type="checkbox"
              />
              <label
                className="slds-checkbox--button__label"
                htmlFor="ButtonGroupExampleFri"
              >
                <span
                  className="slds-checkbox--faux"
                >
                  Fri
                </span>
              </label>
            </span>
          </SLDSCheckbox>
        </div>
        <div
          className="slds-form-element__help"
        >
          This field is required
        </div>
      </div>
    </fieldset>
  </SLDSButtonGroup>
</ButtonGroupExample>
`;

exports[`Button Group Checkbox Snapshot 1`] = `
<ButtonGroupExample>
  <SLDSButtonGroup
    labels={
      Object {
        "label": "Scheduled Day(s)",
      }
    }
    variant="checkbox"
  >
    <fieldset
      className="slds-form-element"
    >
      <legend
        className="slds-form-element__legend slds-form-element__label"
      >
        Scheduled Day(s)
      </legend>
      <div
        className="slds-form-element__control"
      >
        <div
          className="slds-checkbox--button-group"
        >
          <SLDSCheckbox
            id="ButtonGroupExampleMon"
            label="Mon"
            labelToggleDisabled="Disabled"
            labelToggleEnabled="Enabled"
            variant="button-group"
          >
            <span
              className="slds-button slds-checkbox--button"
            >
              <input
                id="ButtonGroupExampleMon"
                onChange={[Function]}
                type="checkbox"
              />
              <label
                className="slds-checkbox--button__label"
                htmlFor="ButtonGroupExampleMon"
              >
                <span
                  className="slds-checkbox--faux"
                >
                  Mon
                </span>
              </label>
            </span>
          </SLDSCheckbox>
          <SLDSCheckbox
            id="ButtonGroupExampleTue"
            label="Tue"
            labelToggleDisabled="Disabled"
            labelToggleEnabled="Enabled"
            variant="button-group"
          >
            <span
              className="slds-button slds-checkbox--button"
            >
              <input
                id="ButtonGroupExampleTue"
                onChange={[Function]}
                type="checkbox"
              />
              <label
                className="slds-checkbox--button__label"
                htmlFor="ButtonGroupExampleTue"
              >
                <span
                  className="slds-checkbox--faux"
                >
                  Tue
                </span>
              </label>
            </span>
          </SLDSCheckbox>
          <SLDSCheckbox
            id="ButtonGroupExampleWed"
            label="Wed"
            labelToggleDisabled="Disabled"
            labelToggleEnabled="Enabled"
            variant="button-group"
          >
            <span
              className="slds-button slds-checkbox--button"
            >
              <input
                id="ButtonGroupExampleWed"
                onChange={[Function]}
                type="checkbox"
              />
              <label
                className="slds-checkbox--button__label"
                htmlFor="ButtonGroupExampleWed"
              >
                <span
                  className="slds-checkbox--faux"
                >
                  Wed
                </span>
              </label>
            </span>
          </SLDSCheckbox>
          <SLDSCheckbox
            id="ButtonGroupExampleThu"
            label="Thu"
            labelToggleDisabled="Disabled"
            labelToggleEnabled="Enabled"
            variant="button-group"
          >
            <span
              className="slds-button slds-checkbox--button"
            >
              <input
                id="ButtonGroupExampleThu"
                onChange={[Function]}
                type="checkbox"
              />
              <label
                className="slds-checkbox--button__label"
                htmlFor="ButtonGroupExampleThu"
              >
                <span
                  className="slds-checkbox--faux"
                >
                  Thu
                </span>
              </label>
            </span>
          </SLDSCheckbox>
          <SLDSCheckbox
            id="ButtonGroupExampleFri"
            label="Fri"
            labelToggleDisabled="Disabled"
            labelToggleEnabled="Enabled"
            variant="button-group"
          >
            <span
              className="slds-button slds-checkbox--button"
            >
              <input
                id="ButtonGroupExampleFri"
                onChange={[Function]}
                type="checkbox"
              />
              <label
                className="slds-checkbox--button__label"
                htmlFor="ButtonGroupExampleFri"
              >
                <span
                  className="slds-checkbox--faux"
                >
                  Fri
                </span>
              </label>
            </span>
          </SLDSCheckbox>
        </div>
      </div>
    </fieldset>
  </SLDSButtonGroup>
</ButtonGroupExample>
`;

exports[`Button Group MoreIcon Snapshot 1`] = `
<ButtonGroupExample>
  <IconSettings
    iconPath="/assets/icons"
  >
    <SLDSButtonGroup
      labels={Object {}}
    >
      <div
        className="slds-button-group"
        role="group"
      >
        <SLDSButton
          disabled={false}
          hint={false}
          iconCategory="utility"
          iconSize="medium"
          label="Refresh"
          responsive={false}
          type="button"
          variant="neutral"
        >
          <button
            className="slds-button slds-button--neutral"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Refresh
          </button>
        </SLDSButton>
        <SLDSButton
          disabled={false}
          hint={false}
          iconCategory="utility"
          iconSize="medium"
          label="Edit"
          responsive={false}
          type="button"
          variant="neutral"
        >
          <button
            className="slds-button slds-button--neutral"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Edit
          </button>
        </SLDSButton>
        <SLDSButton
          disabled={false}
          hint={false}
          iconCategory="utility"
          iconSize="medium"
          label="Save"
          responsive={false}
          type="button"
          variant="neutral"
        >
          <button
            className="slds-button slds-button--neutral"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Save
          </button>
        </SLDSButton>
        <OnClickOutside(SLDSMenuDropdown)
          assistiveText="More Options"
          buttonVariant="icon"
          eventTypes={
            Array [
              "mousedown",
              "touchstart",
            ]
          }
          excludeScrollbar={false}
          iconName="down"
          iconVariant="border-filled"
          id="ButtonGroupExampleDropdown"
          onSelect={[Function]}
          openOn="click"
          options={
            Array [
              Object {
                "label": "undo",
                "value": "A0",
              },
              Object {
                "label": "redo",
                "value": "B0",
              },
              Object {
                "label": "activate",
                "value": "C0",
              },
            ]
          }
          outsideClickIgnoreClass="ignore-react-onclickoutside"
          preventDefault={false}
          stopPropagation={false}
          triggerClassName="slds-button--last"
        >
          <SLDSMenuDropdown
            align="left"
            assistiveText="More Options"
            buttonVariant="icon"
            disableOnClickOutside={[Function]}
            enableOnClickOutside={[Function]}
            eventTypes={
              Array [
                "mousedown",
                "touchstart",
              ]
            }
            hoverCloseDelay={300}
            iconName="down"
            iconVariant="border-filled"
            id="ButtonGroupExampleDropdown"
            onSelect={[Function]}
            openOn="click"
            options={
              Array [
                Object {
                  "label": "undo",
                  "value": "A0",
                },
                Object {
                  "label": "redo",
                  "value": "B0",
                },
                Object {
                  "label": "activate",
                  "value": "C0",
                },
              ]
            }
            outsideClickIgnoreClass="ignore-react-onclickoutside"
            preventDefault={false}
            stopPropagation={false}
            triggerClassName="slds-button--last"
          >
            <SLDSMenuDropdownTrigger
              aria-haspopup={true}
              assistiveText="More Options"
              className="ignore-click-ButtonGroupExampleDropdown"
              iconName="down"
              iconVariant="border-filled"
              id="ButtonGroupExampleDropdown"
              isOpen={false}
              menu={null}
              onClick={[Function]}
              onFocus={null}
              onKeyDown={[Function]}
              onMouseEnter={null}
              onMouseLeave={null}
              openOn="click"
              tabIndex="0"
              triggerClassName="slds-button--last"
              triggerRef={[Function]}
              variant="icon"
            >
              <div
                className="slds-dropdown-trigger slds-dropdown-trigger--click slds-button--last"
                id="ButtonGroupExampleDropdown"
                onClick={[Function]}
                onFocus={null}
                onKeyDown={[Function]}
                onMouseEnter={null}
                onMouseLeave={null}
              >
                <SLDSButton
                  aria-expanded={false}
                  aria-haspopup={true}
                  assistiveText="More Options"
                  className="ignore-click-ButtonGroupExampleDropdown"
                  disabled={false}
                  hint={false}
                  iconCategory="utility"
                  iconName="down"
                  iconSize="medium"
                  iconVariant="border-filled"
                  responsive={false}
                  tabIndex="0"
                  type="button"
                  variant="icon"
                >
                  <button
                    aria-expanded={false}
                    aria-haspopup={true}
                    className="slds-button slds-button--icon-border-filled ignore-click-ButtonGroupExampleDropdown"
                    disabled={false}
                    onClick={[Function]}
                    tabIndex="0"
                    type="button"
                  >
                    <SLDSButtonIcon
                      category="utility"
                      className=""
                      hint={false}
                      name="down"
                      size={null}
                    >
                      <UtilityIcon
                        aria-hidden="true"
                        category="utility"
                        className="slds-button__icon"
                        name="down"
                      >
                        <svg
                          aria-hidden="true"
                          className="slds-button__icon"
                        >
                          <use
                            xlinkHref="/assets/icons/utility-sprite/svg/symbols.svg#down"
                          />
                        </svg>
                      </UtilityIcon>
                    </SLDSButtonIcon>
                    <span
                      className="slds-assistive-text"
                    >
                      More Options
                    </span>
                  </button>
                </SLDSButton>
              </div>
            </SLDSMenuDropdownTrigger>
          </SLDSMenuDropdown>
        </OnClickOutside(SLDSMenuDropdown)>
      </div>
    </SLDSButtonGroup>
  </IconSettings>
</ButtonGroupExample>
`;
